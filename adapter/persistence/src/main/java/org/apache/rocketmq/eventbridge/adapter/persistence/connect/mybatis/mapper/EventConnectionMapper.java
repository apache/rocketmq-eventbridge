package org.apache.rocketmq.eventbridge.adapter.persistence.connect.mybatis.mapper;

import org.apache.ibatis.annotations.Param;
import org.apache.rocketmq.eventbridge.domain.model.connection.EventConnection;
import org.apache.rocketmq.eventbridge.domain.model.connection.EventConnectionWithBLOBs;

import java.util.List;

public interface EventConnectionMapper {
    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    int deleteByPrimaryKey(Integer id);

    /**
     * 通过name进行删除
     * @param name 名称
     * @return
     */
    int deleteByNameAndAccountId(@Param("accountId") String accountId,@Param("name") String name);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    int insert(EventConnectionWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    int insertSelective(EventConnectionWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    EventConnectionWithBLOBs selectByPrimaryKey(Integer id);

    /**
     * 分页查询
     * @param accountId
     * @param name
     * @param nextToken
     * @param maxResults
     * @return
     */
    List<EventConnectionWithBLOBs> listConnections(@Param("accountId") String accountId, @Param("name") String name,
                                                   @Param("nextToken") int nextToken, @Param("maxResults") int maxResults);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    EventConnectionWithBLOBs selectByNameAndAccountId(@Param("accountId") String accountId,@Param("name") String name);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    int updateByPrimaryKeySelective(EventConnectionWithBLOBs record);

    /**
     * 通过用户id和名称更新
     * @param record
     * @return
     */
    int updateByAccountIdAndName(EventConnectionWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    int updateByPrimaryKeyWithBLOBs(EventConnectionWithBLOBs record);

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table event_connection
     *
     * @mbggenerated
     */
    int updateByPrimaryKey(EventConnection record);

    /**
     * 通过用户id和name获取总数
     * @param accountId
     * @param name
     * @return
     */
    int getConnectionCount(@Param("accountId") String accountId,@Param("name") String name);
}